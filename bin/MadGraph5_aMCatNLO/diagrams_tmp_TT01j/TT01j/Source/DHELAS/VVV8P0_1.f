C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     -2*Epsilon(1,2,3,-2)*P(-2,3)*P(-1,1)*P(-1,2) -
C      2*Epsilon(1,2,3,-2)*P(-2,2)*P(-1,1)*P(-1,3) -
C      2*Epsilon(1,2,3,-2)*P(-2,1)*P(-1,2)*P(-1,3) +
C      2*Epsilon(2,3,-1,-2)*P(-2,3)*P(-1,1)*P(1,2) +
C      2*Epsilon(2,3,-1,-2)*P(-2,2)*P(-1,1)*P(1,3) -
C      2*Epsilon(1,3,-1,-2)*P(-2,3)*P(-1,2)*P(2,1) -
C      2*Epsilon(1,3,-1,-2)*P(-2,1)*P(-1,2)*P(2,3) +
C      2*Epsilon(1,2,-1,-2)*P(-2,2)*P(-1,3)*P(3,1) +
C      2*Epsilon(1,2,-1,-2)*P(-2,1)*P(-1,3)*P(3,2) +
C      Epsilon(3,-1,-2,-3)*P(-3,2)*P(-2,3)*P(-1,1)*Metric(1,2) -
C      Epsilon(3,-1,-2,-3)*P(-3,1)*P(-2,3)*P(-1,2)*Metric(1,2) -
C      Epsilon(2,-1,-2,-3)*P(-3,3)*P(-2,2)*P(-1,1)*Metric(1,3) +
C      Epsilon(2,-1,-2,-3)*P(-3,1)*P(-2,2)*P(-1,3)*Metric(1,3) +
C      Epsilon(1,-1,-2,-3)*P(-3,3)*P(-2,1)*P(-1,2)*Metric(2,3) -
C      Epsilon(1,-1,-2,-3)*P(-3,2)*P(-2,1)*P(-1,3)*Metric(2,3)
C     
      SUBROUTINE VVV8P0_1(V2, V3, COUP, M1, W1,V1)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 TMP61
      COMPLEX*16 TMP78
      REAL*8 P3(0:3)
      REAL*8 W1
      COMPLEX*16 TMP28
      COMPLEX*16 TMP25
      COMPLEX*16 TMP69
      COMPLEX*16 COUP
      COMPLEX*16 TMP79
      REAL*8 P2(0:3)
      COMPLEX*16 TMP72
      COMPLEX*16 TMP24
      COMPLEX*16 V2(*)
      REAL*8 P1(0:3)
      COMPLEX*16 TMP80
      COMPLEX*16 TMP23
      COMPLEX*16 DENOM
      COMPLEX*16 V3(*)
      COMPLEX*16 TMP27
      COMPLEX*16 TMP48
      COMPLEX*16 V1(6)
      COMPLEX*16 TMP38
      COMPLEX*16 TMP77
      REAL*8 M1
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = DBLE(V3(1))
      P3(1) = DBLE(V3(2))
      P3(2) = DIMAG(V3(2))
      P3(3) = DIMAG(V3(1))
      V1(1) = +V2(1)+V3(1)
      V1(2) = +V2(2)+V3(2)
      P1(0) = -DBLE(V1(1))
      P1(1) = -DBLE(V1(2))
      P1(2) = -DIMAG(V1(2))
      P1(3) = -DIMAG(V1(1))
      TMP69 = (P1(0)*P2(0)-P1(1)*P2(1)-P1(2)*P2(2)-P1(3)*P2(3))
      TMP25 = (P1(0)*V2(3)-P1(1)*V2(4)-P1(2)*V2(5)-P1(3)*V2(6))
      TMP27 = (P3(0)*V2(3)-P3(1)*V2(4)-P3(2)*V2(5)-P3(3)*V2(6))
      TMP80 = (-1D0)*(P1(0)*(P2(1)*(P3(3)*V2(5)-P3(2)*V2(6))+(P2(2)
     $ *(P3(1)*V2(6)-P3(3)*V2(4))+P2(3)*(P3(2)*V2(4)-P3(1)*V2(5))))
     $ +(P1(1)*(P2(0)*(P3(2)*V2(6)-P3(3)*V2(5))+(P2(2)*(P3(3)*V2(3)
     $ -P3(0)*V2(6))+P2(3)*(P3(0)*V2(5)-P3(2)*V2(3))))+(P1(2)*(P2(0)
     $ *(P3(3)*V2(4)-P3(1)*V2(6))+(P2(1)*(P3(0)*V2(6)-P3(3)*V2(3))
     $ +P2(3)*(P3(1)*V2(3)-P3(0)*V2(4))))+P1(3)*(P2(0)*(P3(1)*V2(5)
     $ -P3(2)*V2(4))+(P2(1)*(P3(2)*V2(3)-P3(0)*V2(5))+P2(2)*(P3(0)
     $ *V2(4)-P3(1)*V2(3)))))))
      TMP79 = (-1D0)*(P1(0)*(P2(1)*(P3(2)*V2(6)-P3(3)*V2(5))+(P2(2)
     $ *(P3(3)*V2(4)-P3(1)*V2(6))+P2(3)*(P3(1)*V2(5)-P3(2)*V2(4))))
     $ +(P1(1)*(P2(0)*(P3(3)*V2(5)-P3(2)*V2(6))+(P2(2)*(P3(0)*V2(6)
     $ -P3(3)*V2(3))+P2(3)*(P3(2)*V2(3)-P3(0)*V2(5))))+(P1(2)*(P2(0)
     $ *(P3(1)*V2(6)-P3(3)*V2(4))+(P2(1)*(P3(3)*V2(3)-P3(0)*V2(6))
     $ +P2(3)*(P3(0)*V2(4)-P3(1)*V2(3))))+P1(3)*(P2(0)*(P3(2)*V2(4)
     $ -P3(1)*V2(5))+(P2(1)*(P3(0)*V2(5)-P3(2)*V2(3))+P2(2)*(P3(1)
     $ *V2(3)-P3(0)*V2(4)))))))
      TMP78 = (-1D0)*(P1(0)*(P2(1)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+P2(3)*(V3(5)*P3(1)-V3(4)*P3(2))))
     $ +(P1(1)*(P2(0)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)*(V3(6)*P3(0)
     $ -V3(3)*P3(3))+P2(3)*(V3(3)*P3(2)-V3(5)*P3(0))))+(P1(2)*(P2(0)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+(P2(1)*(V3(3)*P3(3)-V3(6)*P3(0))
     $ +P2(3)*(V3(4)*P3(0)-V3(3)*P3(1))))+P1(3)*(P2(0)*(V3(4)*P3(2)
     $ -V3(5)*P3(1))+(P2(1)*(V3(5)*P3(0)-V3(3)*P3(2))+P2(2)*(V3(3)
     $ *P3(1)-V3(4)*P3(0)))))))
      TMP77 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+P2(3)*(V3(4)*P3(2)-V3(5)*P3(1))))
     $ +(P1(1)*(P2(0)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)*(V3(3)*P3(3)
     $ -V3(6)*P3(0))+P2(3)*(V3(5)*P3(0)-V3(3)*P3(2))))+(P1(2)*(P2(0)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+(P2(1)*(V3(6)*P3(0)-V3(3)*P3(3))
     $ +P2(3)*(V3(3)*P3(1)-V3(4)*P3(0))))+P1(3)*(P2(0)*(V3(5)*P3(1)
     $ -V3(4)*P3(2))+(P2(1)*(V3(3)*P3(2)-V3(5)*P3(0))+P2(2)*(V3(4)
     $ *P3(0)-V3(3)*P3(1)))))))
      TMP61 = (-1D0)*(P1(0)*(P3(1)*(V3(5)*V2(6)-V3(6)*V2(5))+(P3(2)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+P3(3)*(V3(4)*V2(5)-V3(5)*V2(4))))
     $ +(P1(1)*(P3(0)*(V3(6)*V2(5)-V3(5)*V2(6))+(P3(2)*(V3(3)*V2(6)
     $ -V3(6)*V2(3))+P3(3)*(V3(5)*V2(3)-V3(3)*V2(5))))+(P1(2)*(P3(0)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+(P3(1)*(V3(6)*V2(3)-V3(3)*V2(6))
     $ +P3(3)*(V3(3)*V2(4)-V3(4)*V2(3))))+P1(3)*(P3(0)*(V3(5)*V2(4)
     $ -V3(4)*V2(5))+(P3(1)*(V3(3)*V2(5)-V3(5)*V2(3))+P3(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))))
      TMP48 = (P3(0)*P1(0)-P3(1)*P1(1)-P3(2)*P1(2)-P3(3)*P1(3))
      TMP23 = (V3(3)*P1(0)-V3(4)*P1(1)-V3(5)*P1(2)-V3(6)*P1(3))
      TMP28 = (V3(3)*V2(3)-V3(4)*V2(4)-V3(5)*V2(5)-V3(6)*V2(6))
      TMP72 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*V2(6)-V3(6)*V2(5))+(P2(2)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+P2(3)*(V3(4)*V2(5)-V3(5)*V2(4))))
     $ +(P1(1)*(P2(0)*(V3(6)*V2(5)-V3(5)*V2(6))+(P2(2)*(V3(3)*V2(6)
     $ -V3(6)*V2(3))+P2(3)*(V3(5)*V2(3)-V3(3)*V2(5))))+(P1(2)*(P2(0)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+(P2(1)*(V3(6)*V2(3)-V3(3)*V2(6))
     $ +P2(3)*(V3(3)*V2(4)-V3(4)*V2(3))))+P1(3)*(P2(0)*(V3(5)*V2(4)
     $ -V3(4)*V2(5))+(P2(1)*(V3(3)*V2(5)-V3(5)*V2(3))+P2(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))))
      TMP38 = (P3(0)*P2(0)-P3(1)*P2(1)-P3(2)*P2(2)-P3(3)*P2(3))
      TMP24 = (V3(3)*P2(0)-V3(4)*P2(1)-V3(5)*P2(2)-V3(6)*P2(3))
      DENOM = COUP/(P1(0)**2-P1(1)**2-P1(2)**2-P1(3)**2 - M1 * (M1 -CI
     $ * W1))
      V1(3)= DENOM*(-CI)*(P2(1)*(P3(2)*(-2D0)*(V3(6)*TMP25+V2(6)*TMP23
     $ +P1(3)*TMP28)+(P3(3)*2D0*(V3(5)*TMP25+V2(5)*TMP23+P1(2)*TMP28)
     $ +(TMP27*2D0*(V3(5)*P1(3)-V3(6)*P1(2))+2D0*(TMP48*(V3(5)*V2(6)
     $ -V3(6)*V2(5))))))+(P2(2)*(P3(1)*2D0*(V3(6)*TMP25+V2(6)*TMP23
     $ +P1(3)*TMP28)+(P3(3)*(-2D0)*(V3(4)*TMP25+V2(4)*TMP23+P1(1)
     $ *TMP28)+(TMP27*2D0*(V3(6)*P1(1)-V3(4)*P1(3))+2D0*(TMP48*(V3(6)
     $ *V2(4)-V3(4)*V2(6))))))+(P2(3)*(P3(1)*(-2D0)*(V3(5)*TMP25+V2(5)
     $ *TMP23+P1(2)*TMP28)+(P3(2)*2D0*(V3(4)*TMP25+V2(4)*TMP23+P1(1)
     $ *TMP28)+(TMP27*2D0*(V3(4)*P1(2)-V3(5)*P1(1))+2D0*(TMP48*(V3(4)
     $ *V2(5)-V3(5)*V2(4))))))+(TMP24*(P1(1)*2D0*(P3(3)*V2(5)-P3(2)
     $ *V2(6))+(P1(2)*2D0*(P3(1)*V2(6)-P3(3)*V2(4))+2D0*(P1(3)*(P3(2)
     $ *V2(4)-P3(1)*V2(5)))))+(TMP38*(P1(1)*2D0*(V3(5)*V2(6)-V3(6)
     $ *V2(5))+(P1(2)*2D0*(V3(6)*V2(4)-V3(4)*V2(6))+2D0*(P1(3)*(V3(4)
     $ *V2(5)-V3(5)*V2(4)))))+(TMP69*(P3(1)*2D0*(V3(5)*V2(6)-V3(6)
     $ *V2(5))+(P3(2)*2D0*(V3(6)*V2(4)-V3(4)*V2(6))+2D0*(P3(3)*(V3(4)
     $ *V2(5)-V3(5)*V2(4)))))+(V2(3)*(TMP77-TMP78)+(V3(3)*(TMP80-TMP79)
     $ +(+2D0*(P2(0)*TMP61+P3(0)*TMP72))))))))))
      V1(4)= DENOM*CI*(P2(0)*(P3(2)*2D0*(V3(6)*TMP25+V2(6)*TMP23+P1(3)
     $ *TMP28)+(P3(3)*(-2D0)*(V3(5)*TMP25+V2(5)*TMP23+P1(2)*TMP28)
     $ +(TMP27*2D0*(V3(6)*P1(2)-V3(5)*P1(3))+2D0*(TMP48*(V3(6)*V2(5)
     $ -V3(5)*V2(6))))))+(P2(2)*(P3(0)*(-2D0)*(V3(6)*TMP25+V2(6)*TMP23
     $ +P1(3)*TMP28)+(P3(3)*2D0*(V3(3)*TMP25+V2(3)*TMP23+P1(0)*TMP28)
     $ +(TMP27*2D0*(V3(3)*P1(3)-V3(6)*P1(0))+2D0*(TMP48*(V3(3)*V2(6)
     $ -V3(6)*V2(3))))))+(P2(3)*(P3(0)*2D0*(V3(5)*TMP25+V2(5)*TMP23
     $ +P1(2)*TMP28)+(P3(2)*(-2D0)*(V3(3)*TMP25+V2(3)*TMP23+P1(0)
     $ *TMP28)+(TMP27*2D0*(V3(5)*P1(0)-V3(3)*P1(2))+2D0*(TMP48*(V3(5)
     $ *V2(3)-V3(3)*V2(5))))))+(TMP24*(P1(0)*2D0*(P3(2)*V2(6)-P3(3)
     $ *V2(5))+(P1(2)*2D0*(P3(3)*V2(3)-P3(0)*V2(6))+2D0*(P1(3)*(P3(0)
     $ *V2(5)-P3(2)*V2(3)))))+(TMP38*(P1(0)*2D0*(V3(6)*V2(5)-V3(5)
     $ *V2(6))+(P1(2)*2D0*(V3(3)*V2(6)-V3(6)*V2(3))+2D0*(P1(3)*(V3(5)
     $ *V2(3)-V3(3)*V2(5)))))+(TMP69*(P3(0)*2D0*(V3(6)*V2(5)-V3(5)
     $ *V2(6))+(P3(2)*2D0*(V3(3)*V2(6)-V3(6)*V2(3))+2D0*(P3(3)*(V3(5)
     $ *V2(3)-V3(3)*V2(5)))))+(V2(4)*(TMP78-TMP77)+(V3(4)*(TMP79-TMP80)
     $ +(-2D0*(P2(1)*TMP61+P3(1)*TMP72))))))))))
      V1(5)= DENOM*CI*(P2(0)*(P3(1)*(-2D0)*(V3(6)*TMP25+V2(6)*TMP23
     $ +P1(3)*TMP28)+(P3(3)*2D0*(V3(4)*TMP25+V2(4)*TMP23+P1(1)*TMP28)
     $ +(TMP27*2D0*(V3(4)*P1(3)-V3(6)*P1(1))+2D0*(TMP48*(V3(4)*V2(6)
     $ -V3(6)*V2(4))))))+(P2(1)*(P3(0)*2D0*(V3(6)*TMP25+V2(6)*TMP23
     $ +P1(3)*TMP28)+(P3(3)*(-2D0)*(V3(3)*TMP25+V2(3)*TMP23+P1(0)
     $ *TMP28)+(TMP27*2D0*(V3(6)*P1(0)-V3(3)*P1(3))+2D0*(TMP48*(V3(6)
     $ *V2(3)-V3(3)*V2(6))))))+(P2(3)*(P3(0)*(-2D0)*(V3(4)*TMP25+V2(4)
     $ *TMP23+P1(1)*TMP28)+(P3(1)*2D0*(V3(3)*TMP25+V2(3)*TMP23+P1(0)
     $ *TMP28)+(TMP27*2D0*(V3(3)*P1(1)-V3(4)*P1(0))+2D0*(TMP48*(V3(3)
     $ *V2(4)-V3(4)*V2(3))))))+(TMP24*(P1(0)*2D0*(P3(3)*V2(4)-P3(1)
     $ *V2(6))+(P1(1)*2D0*(P3(0)*V2(6)-P3(3)*V2(3))+2D0*(P1(3)*(P3(1)
     $ *V2(3)-P3(0)*V2(4)))))+(TMP38*(P1(0)*2D0*(V3(4)*V2(6)-V3(6)
     $ *V2(4))+(P1(1)*2D0*(V3(6)*V2(3)-V3(3)*V2(6))+2D0*(P1(3)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))+(TMP69*(P3(0)*2D0*(V3(4)*V2(6)-V3(6)
     $ *V2(4))+(P3(1)*2D0*(V3(6)*V2(3)-V3(3)*V2(6))+2D0*(P3(3)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))+(V2(5)*(TMP78-TMP77)+(V3(5)*(TMP79-TMP80)
     $ +(-2D0*(P2(2)*TMP61+P3(2)*TMP72))))))))))
      V1(6)= DENOM*CI*(P2(0)*(P3(1)*2D0*(V3(5)*TMP25+V2(5)*TMP23+P1(2)
     $ *TMP28)+(P3(2)*(-2D0)*(V3(4)*TMP25+V2(4)*TMP23+P1(1)*TMP28)
     $ +(TMP27*2D0*(V3(5)*P1(1)-V3(4)*P1(2))+2D0*(TMP48*(V3(5)*V2(4)
     $ -V3(4)*V2(5))))))+(P2(1)*(P3(0)*(-2D0)*(V3(5)*TMP25+V2(5)*TMP23
     $ +P1(2)*TMP28)+(P3(2)*2D0*(V3(3)*TMP25+V2(3)*TMP23+P1(0)*TMP28)
     $ +(TMP27*2D0*(V3(3)*P1(2)-V3(5)*P1(0))+2D0*(TMP48*(V3(3)*V2(5)
     $ -V3(5)*V2(3))))))+(P2(2)*(P3(0)*2D0*(V3(4)*TMP25+V2(4)*TMP23
     $ +P1(1)*TMP28)+(P3(1)*(-2D0)*(V3(3)*TMP25+V2(3)*TMP23+P1(0)
     $ *TMP28)+(TMP27*2D0*(V3(4)*P1(0)-V3(3)*P1(1))+2D0*(TMP48*(V3(4)
     $ *V2(3)-V3(3)*V2(4))))))+(TMP24*(P1(0)*2D0*(P3(1)*V2(5)-P3(2)
     $ *V2(4))+(P1(1)*2D0*(P3(2)*V2(3)-P3(0)*V2(5))+2D0*(P1(2)*(P3(0)
     $ *V2(4)-P3(1)*V2(3)))))+(TMP38*(P1(0)*2D0*(V3(5)*V2(4)-V3(4)
     $ *V2(5))+(P1(1)*2D0*(V3(3)*V2(5)-V3(5)*V2(3))+2D0*(P1(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))+(TMP69*(P3(0)*2D0*(V3(5)*V2(4)-V3(4)
     $ *V2(5))+(P3(1)*2D0*(V3(3)*V2(5)-V3(5)*V2(3))+2D0*(P3(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))+(V2(6)*(TMP78-TMP77)+(V3(6)*(TMP79-TMP80)
     $ +(-2D0*(P2(3)*TMP61+P3(3)*TMP72))))))))))
      END


